@model M_and_A.Models.Product

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control" asp-items="Html.GetEnumSelectList<Product.Category>()">
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageName" class="control-label"></label>
                <input asp-for="ImageName" class="form-control" type="text" readonly />
                <input type="file" id="fileInput" class="form-control" accept="image/*" />
                <span asp-validation-for="ImageName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var fileInput = document.getElementById('fileInput');
        var imageNameInput = document.getElementById('ImageName');

        fileInput.addEventListener('change', function () {
            if (fileInput.files && fileInput.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    var img = new Image();
                    img.src = e.target.result;

                    img.onload = function () {
                        var canvas = document.createElement('canvas');
                        var ctx = canvas.getContext('2d');

                        canvas.width = img.width;
                        canvas.height = img.height;

                        ctx.drawImage(img, 0, 0);

                        var dataURL = canvas.toDataURL('image/jpg');

                        imageNameInput.value = fileInput.files[0].name;

                        // Відправити dataURL на сервер та зберегти його у папку wwwroot/img
                        var formData = new FormData();
                        formData.append('image', fileInput.files[0]);

                        fetch('/Products/UploadImage', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => {
                                if (response.ok) {
                                    console.log('Image uploaded successfully');
                                } else {
                                    console.error('Image upload failed');
                                }
                            })
                            .catch(error => {
                                console.error('Image upload error:', error);
                            });
                    };
                };

                reader.readAsDataURL(fileInput.files[0]);
            }
        });
    </script>

}
